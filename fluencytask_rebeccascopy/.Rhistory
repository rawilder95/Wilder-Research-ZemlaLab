backdir[backdir%in% this_log]= NaN
backdir[backdir %in% fordir]= NaN
newrow= c(fordir, backdir)
log_table= rbindlist(list(log_table, newrow))
print(i)
} else{
print(this_transition$sp)
}
}
# for(i in 1:max(this_transition$sp1)){
#   idx= this_transition[sp1== i]$sp1
#   this_log[i]= idx
#   fordir= c(1:idx)
#   fordir[!fordir %in% this_log]= NaN
#   backdir= c(idx:1)
#   backdir[backdir %in% this_log]= NaN
#   tvec[i]= sum(!is.nan(fordir))+ sum(!is.nan(backdir))
#   newrow= list(c(fordir, (backdir*-1)))
#   log_table= rbindlist(list(log_table, newrow))
# }
this_transition= s_df[id== nsubj[1]& category== ncat[1]]
thislog= vector()
# possible transitions
idx= this_transition[1]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[1]= idx
k= k[!k%in% thislog]
k
length(k)
idx= this_transition[2]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[2]= idx
k= k[!k%in% thislog]
k
length(k)
idx= this_transition[3]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[3]= idx
k= k[!k%in% thislog]
k
length(k)
idx= this_transition[4]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[4]= idx
k= k[!k%in% thislog]
k
length(k)
idx= this_transition[5]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[5]= idx
k= k[!k%in% thislog]
k
length(k)
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= numeric())
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= numeric())
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= rep(0, length(1:max(this_transition$sp1))))
ptr_count
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
this_transition
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= rep(0, length(1:max(this_transition$sp1))))
checkinfo= vector()
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
k
thislog
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_counts
ptr_count
k
thislog
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= rep(0, length(1:max(this_transition$sp1))))
checkinfo= vector()
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
idx
thislog= vector()
ptr_count= data.table(sp= 1:max(this_transition$sp1), possible= numeric())
checkinfo= vector()
thislog= vector()
ptr_count= data.table(sp= numeric(), possible= numeric())
checkinfo= vector()
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), possible= numeric())
checkinfo= vector()
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
this_transition
this_transition[sp1 %in% i]
i
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
k
ptr_count[1]$possible= length(k)
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), possible= numeric())
checkinfo= vector()
max(this_transition$sp1)
i
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
print("it is")
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
k
ptr_count[i]$possible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
print("it is")
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
idx= this_transition[5]$sp1 #= 2
# vector= [1, 3, 4, 5, 6, ..... to 25]
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[5]= idx
k= k[!k%in% thislog]
k
length(k)
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
print("it is")
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
print("it is")
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
if(nrow(this_transition[sp1 %in% i])>0){
print(i)
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
}
ptr_count[i, npossible]= length(k) #N possible transitions that could be made up till this point
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
}
ptr_count[i, npossible]= length(k) #N possible transitions that could be made up till this point
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
colnames(ptr_count)
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
}
ptr_count[i, npossible]= length(k) #N possible transitions that could be made up till this point
}
ptr_count
ptr_count$npossible
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
getvals= vector()
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
for (i in 1:max(this_transition$sp1)){
print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
getvals
k
for (i in 1:max(this_transition$sp1)){
# print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
print(k)
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
for (i in 1:max(this_transition$sp1)){
# print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
print(k)
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
thislog= vector()
ptr_count= data.table(sp= numeric(), npossible= numeric())
getvals= vector()
for (i in 1:max(this_transition$sp1)){
# print(i)
if(nrow(this_transition[sp1 %in% i])>0){
idx= i
k = c(1:idx, idx:(max(this_transition$sp1)))
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
print(k)
getvals[i]= length(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
}else {
k = 0
thislog[i]= idx
k= k[!k%in% thislog]
k= k[!is.na(k)]
print(k)
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
}else {
k = 0
thislog[i]= idx
}
ptr_count[i]$npossible= length(k) #N possible transitions that could be made up till this point
}
ptr_count
