rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
for (subject in nsubj){
for(cats in ncat){
this_subj= dat[id== subject & category== cats]
thisword= unique(this_subj$word)
for (word in 2:length(thisword)-1){
if(sum(this_subj[item %in% thisword[word]]$both_trials, this_subj[item %in% thisword[word]]$both_trials)==2){
all_transitions[id== subject & category== cats & item== item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item== item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)== length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
dat= subset(dat, select= -c(listnum))
sum(is.na(all_transitions$x))
sum(dat[listrank== 2]$both_trials==0)
dat
rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
dat[, both_trials:= 0]
dat[, both_trials:= 0]
dat[, item %in% dat[listrank==1] & item %in% dat[listrank==2]]
dat[, both_trials:= 0]
dat[, item %in% dat[listrank==1] & item %in% dat[listrank==2], by= item]
dat
dat[, item %in% dat[listrank==1] & item %in% dat[listrank==2], by= item]
l1_items= dat[listrank==1]$item
l2_items= dat[listrank==2]$item
dat[, item %in% dat[listrank==1] & item %in% dat[listrank==2], by= item]
l1_items= dat[listrank==1]$item
l2_items= dat[listrank==2]$item
dat[, item %in% l1_items & item %in% l2_items]
dat[item %in% l1_items & item %in% l2_items]
dat[,item %in% l1_items & item %in% l2_items, by= .(id, category)]
k= dat[,item %in% l1_items & item %in% l2_items, by= .(id, category)]
merge(k,dat)
k= dat[,item %in% l1_items & item %in% l2_items, by= .(id, category)]
merge(k,dat, allow.cartesian = TRUE)
k= dat[item %in% l1_items & item %in% l2_items,]
k
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= dat[id== subject & category== cats]
}
}
}
this_subj
l1_items= dat[listrank==1]$item
l2_items= dat[listrank==2]$item
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= dat[id== subject & category== cats]
}
}
}
rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
dat= subset(dat, select= -c(listnum))
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
dat[, both_trials:= 0]
l1_items= dat[listrank==1]$item
l2_items= dat[listrank==2]$item
dat
l1_items= dat[listrank==1]$item
l2_items= dat[listrank==2]$item
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= dat[id== subject & category== cats]
}
}
}
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= k[id== subject & category== cats]
}
}
}
this_subj
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= k[id== subject & category== cats]
this_subj$both_trials= 1
}
}
}
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= k[id== subject & category== cats]
this_subj$both_trials= 1
dat[id== subject & category== cats]$both_trials= this_subj$both_trials
}
}
}
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= k[id== subject & category== cats]
this_subj$both_trials= 1
k[id== subject & category== cats]$both_trials= this_subj$both_trials
}
}
}
k
k[both_trials==0]
k= dat[item %in% l1_items & item %in% l2_items,]
for (subject in nsubj){
for(cats in ncat){
if(nrow(dat[id== subject & category== cats])){
this_subj= k[id== subject & category== cats]
}
}
}
this_subj
for (subject in nsubj){
for(cats in ncat){
for (word in 2:length(thisword)-1){
if(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2){
all_transitions[id== subject & category== cats & item== item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item== item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)== length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
both_trials
warnings()
for (subject in nsubj){
for(cats in ncat){
for (word in 2:length(thisword)-1){
if(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2){
all_transitions[id== subject & category== cats & item %in% item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item== item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)== length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
for (subject in nsubj){
for(cats in ncat){
for (word in 2:length(thisword)-1){
if(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2){
all_transitions[id== subject & category== cats & item %in% item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item %in% item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)%in%length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
dat
for (subject in nsubj){
for (cats in unique(dat$category)){
this_subj <- dat[id== subject & category== cats,]
repeated_words <- intersect(this_subj[listrank==2,item], this_subj[listrank==1,item])
this_subj[, both_trials:= 0]
this_subj[item %in% repeated_words, both_trials:=1]
dat[id== subject & category == cats]$both_trials <- this_subj$both_trials
}
}
dat
rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
dat= subset(dat, select= -c(listnum))
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
for (subject in nsubj){
for (cats in unique(dat$category)){
this_subj <- dat[id== subject & category== cats,]
repeated_words <- intersect(this_subj[listrank==2,item], this_subj[listrank==1,item])
this_subj[, both_trials:= 0]
this_subj[item %in% repeated_words, both_trials:=1]
dat[id== subject & category == cats]$both_trials <- this_subj$both_trials
}
}
dat
rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
dat= subset(dat, select= -c(listnum))
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
dat[, both_trials:= 0]
for (subject in nsubj){
for (cats in unique(dat$category)){
this_subj <- dat[id== subject & category== cats,]
repeated_words <- intersect(this_subj[listrank==2,item], this_subj[listrank==1,item])
this_subj[, both_trials:= 0]
this_subj[item %in% repeated_words, both_trials:=1]
dat[id== subject & category == cats]$both_trials <- this_subj$both_trials
}
}
dat
for (subject in nsubj){
for(cats in ncat){
for (word in 2:length(thisword)-1){
if(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2){
all_transitions[id== subject & category== cats & item %in% item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item %in% item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)%in%length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
for (subject in nsubj){
for(cats in ncat){
for (word in 1:(length(thisword)-1)){
if(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2){
all_transitions[id== subject & category== cats & item %in% item[word] <- which(thatword %in% thisword[word])]
} else {
all_transitions[id== subject & category== cats & item %in% item[word]] <- NaN
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
if(length(transition_dist[is.na(transition_dist)%in%length(transition_dist)])){
print(sum(this_subj$both_trials[word], this_subj$both_trials[word+1])==2)
}
}
}
}
final_results
rm()
library(lme4)
library(cowplot)
library(ggplot2)
library(data.table)
library(dplyr)
# set up data file
dat <- data.table(read.csv("final_results.csv"))
dat<- subset(dat,select=-c(X))
nsubj= unique(dat$id)
ncat= unique(dat$category)
# get indices for categories that were !repeated twice
k= dat[, .N, by= .(category, game, id)]
cat_table= k[, .N, by= .(id, category)]
cat_table= cat_table[N==2]
dat= merge(dat, cat_table)
dat= dat[N== 2]
dat= subset(dat, select= -c(N))
# Drop games 23-24
ncat= unique(dat$category)
for (i in 1:length(nsubj)){
for (j in 1:length(ncat)){
this_game <- dat[id== nsubj[i] & category== ncat[j], game]
dat[id== nsubj[i] & category== ncat[j], listnum:= max(game)]
}
}
dat= subset(dat, select= -c(listnum))
# This loop looks up and gets rid of perseverative erros by setting to NaN
check4err= data.table()
for (subject in nsubj){
for (cats in ncat){
subj <- dat[listrank== 1 & id== subject & category== cats]
if(any(subj[listrank== 1,.N, by= item]$N> 1)){
for (game_id in unique(subj$game)){
this_subj= subj[game== game_id]
check4err <- this_subj[listrank== 1,.N, by= item]
get_err <- this_subj[item %in% check4err[check4err$N>1]$item]
smallest_val <- min(get_err$itemnum)
# larger_val <- get_err[itemnum != smallest_val]
this_subj[item %in% unique(get_err$item) & itemnum %in% smallest_val] = NaN
dat[id== subject & category == cats & listrank== 1] <- this_subj
}
}
}
}
dat[, both_trials:= 0]
for (subject in nsubj){
for (cats in unique(dat$category)){
this_subj <- dat[id== subject & category== cats,]
repeated_words <- intersect(this_subj[listrank==2,item], this_subj[listrank==1,item])
this_subj[, both_trials:= 0]
this_subj[item %in% repeated_words, both_trials:=1]
dat[id== subject & category == cats]$both_trials <- this_subj$both_trials
}
}
